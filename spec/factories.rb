def get_input_a
  Input.where(name: 'A').first || Input.create(name: 'A', minimum_value: 100, maximum_value: 1000)
end

def get_input_b
  Input.where(name: 'B').first || Input.create(name: 'B', minimum_value: 10, maximum_value: 15)
end

def get_output_result
  Output.where(name: 'Result').first || Output.create(name: 'Result')
end

def get_simulator_specification
  spec = SimulatorSpecification.where(process_name: 'Polyfun').first
  if !spec
    spec = SimulatorSpecification.create(
      service_url: 'http://uncertws.aston.ac.uk:8080/ps/service',
      process_name: 'Polyfun',
      process_description: '',
      inputs: [ get_input_a, get_input_b ],
      outputs: [ get_output_result ]
    )
  end
  spec
end

def get_design
  design = Design.where(size: 30).first
  if !design
    design = Design.create(size: 30, sampling_method: 'lhs')
    design.design_values.create(
      input_id: get_input_a.id,
      points: [315.55828940820464, 342.8262418877314, 606.1903955111948, 492.59872431582943, 621.0292226132377, 457.0737878500177, 151.64505343398855, 383.5935544238505, 851.274794936971, 551.0533439440217, 725.2716075496735, 940.8822165471815, 671.2849915527116, 175.43873053831476, 285.99158593333595, 815.7434098411835, 987.3471615212118, 762.527934244328, 646.2337801132132, 191.21522720821292, 110.32777902530239, 938.9286496427744, 884.5261208239367, 461.9802025672735, 739.6379453542668, 407.26779608264997, 227.70602595625252, 838.233189413975, 530.3356632946733, 274.8643993656531],
    )
    design.design_values.create(
      input_id: get_input_b.id,
      points: [11.382325651996732, 10.328027858937096, 10.120512835839852, 14.825638101561474, 13.650478036460692, 10.862757028612117, 14.050861896170698, 11.780483419989856, 12.34162965852694, 13.827592319916182, 12.7602092733906, 12.103073590484499, 11.5390805353085, 14.867466683143823, 13.468854565907604, 11.251705934035295, 12.259068966548185, 10.392281164981457, 14.381772528190321, 11.04088555300294, 12.620662487166904, 12.886716220524388, 13.057483666004359, 13.306231377467562, 10.64683371974027, 11.916939324669643, 14.173376006913987, 13.943269045555644, 10.735788708170038, 14.629364676751477]
    )
  end
  design
end

def get_run
  run = Run.where(size: 30).first
  if !run
    run = Run.create(size: 30)
    run.run_values.create(
      output_id: get_output_result.id,
      points: [1076.2322054727167, 1135.1468851181749, 1920.9959665939834, 1697.5957180659595, 2049.423218463609, 1489.2208538127152, 652.3618803272273, 1289.5604528802073, 2706.140207439145, 1844.36234119787, 2338.6377633497436, 2969.131039978228, 2147.00535425847, 747.3577571893359, 1039.384801117578, 2573.8311159495556, 3112.3262564902197, 2395.583310545012, 2145.5367213922495, 695.5468354191478, 490.26445869088906, 2982.8534038766497, 2824.0762421597806, 1562.9964011725228, 2332.2689043185987, 1363.8168311158076, 884.0026653021228, 2709.114319918675, 1706.264149070491, 1038.6115089423433]
    )
  end
  run
end

FactoryGirl.define do
  factory :emulator_project do
    user
    simulator_specification { get_simulator_specification }
    design { get_design }
    run { get_run }
    emulator
    emulator_validation
  end

  factory :user do
    first_name 'Tessa'
    last_name 'Testerson'
    password 'passplease'
    email 'tessa@testerson.com'
  end

  factory :emulator do
    output { get_output_result }
    training_size 19
    training_indices [29, 11, 10, 1, 5, 15, 14, 2, 7, 9, 6, 19, 22, 17, 26, 20, 12, 0, 18]
    validation_indices [23, 25, 28, 16, 4, 3, 21, 8, 24, 13, 27]
    mean_function 'linear'
    cov_function 'matern'
    length_scale_multiplier 0.5
    length_scales [ 11.298711601503614, 3.277490512882881 ]
    design {
      design = Design.create(size: 19)
      design.design_values.create(
        input_id: get_input_a.id,
        points: [-0.8271821451043722, 1.7121698366898672, 0.890102899245675, -0.5680613903096252, -0.13246533751605988, 1.2350482513349947, -0.7847570889969944, 0.43607734019377287, -0.4126262754967684, 0.22585416364288083, -1.2969853278646912, -1.146114590473995, 1.4972987631702193, 1.032151542068482, -1.006984705765771, -1.454517303654818, 0.6842660330453156, -0.6720269710824962, 0.588752306874386],
        mean: 491.8166181378944,
        std_dev: 262.27865296205914
      )
      design.design_values.create(
        input_id: get_input_b.id,
        points: [1.5663327218406105, -0.135160605918045, 0.3074297139286909, -1.3306793983139305, -0.970531623061153, -0.7085689493953559, 0.7847124956001288, -1.4704437465828337, -0.3524297186030093, 1.026327524912794, 1.1767027909910655, -0.8505595037032293, 0.5076482866400552, -1.2874038739235631, 1.2592178040547506, 0.21344294931533883, -0.5150180283270348, -0.6205946934621203, 1.3995758540068477],
        mean: 12.303753210189498,
        std_dev: 1.4847493346299587
      )
      design
    }
    run {
      run = Run.create(size: 19)
      run.run_values.create(
        output_id: get_output_result.id,
        points: [0.3245245549661807,0.4360398674751178,-1.044192340725786,-0.794431280390452,0.12410988540543676,2.25573435572796,-0.8727061451886546,0.7571744301735099,0.8026634648373523,-0.6515824728137664,0.02946387769696815,0.7478730185262994,0.4373869139112457,-0.8571557635368485,0.6683641132838615,-1.1617793805232346,1.3695749438777094,-1.3630976414755032,-1.2079644012273953],
        mean: 1466.242106592788,
        std_dev: 677.9807333778781
      )
      run
    }
  end

  factory :emulator_validation do
    design_size 11
  end
end